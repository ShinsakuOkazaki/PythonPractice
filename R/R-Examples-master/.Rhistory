my.vec <- c(1, 2, 67, -8)
str(my.vec)
length(my.vec)
my.vec[3]
my.vec[c(3,4)]
my.vec[5]<-41.2
str(my.vec)
getwd()
42 + 1 * 2^4
1 + 7 != 7
mynumber <- 483
typeof(mynumber)
myint <- as.integer(mynumber)
typeof(myint)
my.vec <- c(1,2,67,-8)
str(my.vec)
length(my.vec)
my.vec[3]
my.vec[c(3,4)]
my..vec[5] <- 41.2
my.vec[5] <- 41.2
my.vec
getwd()
ls
objects()
read.cvs("Auto.csv")
read.csv("Auto.csv")
table(data$mpg)
summanry(data$weight)
summary(data$weight)
data.auto <- read.csv("Auto.csv")
View(data.auto)
summary(data.auto$mpg)
hist(data.auto$mpg)
hist(data.auto$mpg, bins)
hist(data.auto$mpg, break=c(1, 3, 5))
hist(data.auto$mpg, breaks=c(1, 3, 5))
boxplot(data.auto$name)
boxplot(data.auto$weight)
q()
100 * pnorm(7, 5, 3)
pnorm(7, 5, 3 / sqrt(10))
1 - pnorm(7, 5, 3 / sqrt(10))
100 * pnorm(7, 5, 3)
pnorm(7, 5, 3/sqrt(10), lower.tail = F)
q()
library(tcltk)
library(tcltk)
tkplot(g)
library(tcltk)
library(tcltk)
library(asbio)
one.sample.z(null.mu = 0, xbar = -2.98, sigma = 6, n = 30, alternative = "less")
q()
setwd("~/Document/R")
library(tcltk)
library(asbio)
library(tcltk)
library(asbio)
?one.sample.z
one.sample.z(null.mu = 0, xbar = -2.98, sigma = 6, n = 30, alternative = "less")
rm(list=ls())
data <- read.csv("Datasets/PearsonLee.csv")
setwd("~/Document/R/R-Examples-master/Datasets")
data <- read.csv("Datasets/PearsonLee.csv")
setwd("~/Document/R/R-Examples-master")
data <- read.csv("Datasets/PearsonLee.csv")
colnames(data)
head(data, n=4)
attach(data)
heightsOfBoys <- data$child[data$chl=="Son"]
heifhtsOfBoys
heightsOfBoys
heightsOfGirls <- data$child[data$chl=="Daughter"]
# Note that this is a filtering functionality, we first filter the child column that includes the heights of kids and then we divid that column in two groups of Son and Daughter based on the valriable name chl.
# We can also extract the heights of fathers and mothers from the data frame.
heightsOfFathers <- data$parent[data$par=="Father"]
heightsOfMothers <- data$parent[data$par=="Mother"]
length(heightsOfBoys)
length(heightsOfGirls)
aggregate(data$child, by =list(data$chl), FUN=summary)
aggregate(data$parent, by =list(data$par), FUN=summary)
aggregate(data$child, by =list(data$chl), FUN=sd)
par(mfrow=c(2,2))
boxplot(data$child~data$chl)
child
parent
means <- tapply(child, chl, mean)
mean
means
?tapply
results<-t.test(heightsOfBoys)
results
heightsOfBoys
t.test(heightsOfBoys)$conf.int[1]
t.test(heightsOfBoys)$conf.int
t.test(heightsOfBoys)$conf.int[2]
lower <- tapply(child, chl, function(v) t.test(v)$conf.int[1])
lower
t.test(v)$conf.int[1])
t.test(v)$conf.int[1]
lower <- tapply(child, chl, function(v) t.test(v)$conf.int[1])
upper <- tapply(child, chl, function(v) t.test(v)$conf.int[2])
library("gplots")
library("gplots")
library("gplot")
install.packages("gplots")
library("gplots")
library("gplots")
barplot2(means, plot.ci = TRUE, ci.l = lower, ci.u =upper, names.arg = c("Boys", "Grils")
, xlab="Heights of Kids",
main= "Means of heights of Childs by their group", ylab="Heights of Childs", col= "seagreen2", ylim = c(0, 70) )
hist(heightsOfBoys)
hist(heightsOfGirls)
means
decay<- read.csv("Datasets/decay.csv" )
decay
summary(decay$strength[decay^weeks])
summary(decay$strength[decay$weeks])
summary(decay$strength[decay$weeks] == 2)
summary(decay$strength[decay$weeks == 2])
summary(decay$strength[decay$weeks==16])
?t.test
q()
